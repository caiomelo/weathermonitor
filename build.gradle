plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.simple'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR7")
    set('testcontainersVersion', "1.14.3")
    set('liquibaseCoreVersion', '4.0.0')
    set('springDocVersion', '1.4.4')
    set('postgresDriverVersion', '42.2.15')
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.apache.commons:commons-lang3:3.0"
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    compileOnly "org.projectlombok:lombok"
    runtimeOnly "org.postgresql:postgresql:${postgresDriverVersion}"

    annotationProcessor "org.projectlombok:lombok"

    testImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}")
    testImplementation("com.playtika.testcontainers:embedded-postgresql:1.43")

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
	afterEvaluate {
		getClassDirectories().setFrom(files(getClassDirectories().files.collect {
			fileTree(dir: it, exclude: [
					'**/configuration/**',
					'**/model/**',
					'**/exception/**'
			])
		}))
	}
}